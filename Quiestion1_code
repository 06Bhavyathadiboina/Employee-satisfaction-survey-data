Question 1

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# plt.style.use("seaborn-v0_8-notebook")
import warnings
warnings.filterwarnings("ignore")
from pandas.core.frame import DataFrame, Series
from numpy.typing import ArrayLike
import os
from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.tree import DecisionTreeRegressor, plot_tree
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from tqdm import tqdm
from collections import Counter
import itertools
from IPython.display import display, HTML, Markdown
sns.set_style("darkgrid")

CSS = """
    .output {
    flex-direction: row;
    }
"""

HTML(f"<style>{CSS}</style>")

df = pd.read_csv(
    "/kaggle/input/employees-satisfaction-analysis/Employee Attrition.csv",
    dtype={"dept": "category", "salary": "category"}, index_col=0)

df.head()

df.info()

n_rows, n_columns = df.shape
print(f"The data has {n_rows} rows and {n_columns} columns excluding the EMP ID and the total data is {n_rows*n_columns}.")

missing_values = df[df.isna().any(axis=1)]
display(missing_values.head().T)
display(df.isna().agg(["sum", "mean"]).T)

df.dropna(inplace=True) # Drops missing values (np.nan) and modify the original dataframe with inplace = True

def summary_stats(dataframe: DataFrame, numeric_only = True, style=True):
    if numeric_only:
        summary: DataFrame = dataframe.describe().T
        summary["variance"] = dataframe.var(numeric_only=True)
        summary = summary if not style else summary.style.format("{:.3f}").\
        background_gradient(cmap="Blues", axis=1, subset=summary.columns.drop("count"))
    else:
        summary = dataframe.describe(exclude="number")
    return summary



numeric_cols_summary = summary_stats(df, style=True)
category_cols_summary = summary_stats(df, numeric_only=False)

display(numeric_cols_summary)
display(category_cols_summary)

